"Dummy cache backend"

from django.core.cache.backends.base import DEFAULT_TIMEOUT, BaseCache


class DummyCache(BaseCache):
    def __init__(self, host, *args, **kwargs):
<<<<<<< HEAD
        BaseCache.__init__(self, *args, **kwargs)
=======
        super().__init__(*args, **kwargs)
>>>>>>> a49b7d6bd2068c3888052b51a1a4869cb0918bdc

    def add(self, key, value, timeout=DEFAULT_TIMEOUT, version=None):
        key = self.make_key(key, version=version)
        self.validate_key(key)
        return True

    def get(self, key, default=None, version=None):
        key = self.make_key(key, version=version)
        self.validate_key(key)
        return default

    def set(self, key, value, timeout=DEFAULT_TIMEOUT, version=None):
        key = self.make_key(key, version=version)
        self.validate_key(key)

<<<<<<< HEAD
=======
    def touch(self, key, timeout=DEFAULT_TIMEOUT, version=None):
        self.validate_key(key)
        return False

>>>>>>> a49b7d6bd2068c3888052b51a1a4869cb0918bdc
    def delete(self, key, version=None):
        key = self.make_key(key, version=version)
        self.validate_key(key)

<<<<<<< HEAD
    def get_many(self, keys, version=None):
        return {}

=======
>>>>>>> a49b7d6bd2068c3888052b51a1a4869cb0918bdc
    def has_key(self, key, version=None):
        key = self.make_key(key, version=version)
        self.validate_key(key)
        return False

<<<<<<< HEAD
    def set_many(self, data, timeout=DEFAULT_TIMEOUT, version=None):
        pass

    def delete_many(self, keys, version=None):
        pass

=======
>>>>>>> a49b7d6bd2068c3888052b51a1a4869cb0918bdc
    def clear(self):
        pass
